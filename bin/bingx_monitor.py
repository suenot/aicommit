#!/usr/bin/env python3
"""
BingX Position Manager Monitor
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º
"""

import json
import os
import sys
import time
import subprocess
from datetime import datetime, timedelta
from pathlib import Path

CONFIG_FILE = "bingx_config.json"
LOG_FILE = "bingx_position_manager.log"
PID_FILE = "bingx_manager.pid"

class BingXMonitor:
    def __init__(self):
        self.config_path = CONFIG_FILE
        
    def load_config(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        if not os.path.exists(self.config_path):
            print(f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {self.config_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
        
        try:
            with open(self.config_path, 'r', encoding='utf-8') as f:
                return json.load(f)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return None
            
    def save_config(self, config):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        try:
            with open(self.config_path, 'w', encoding='utf-8') as f:
                json.dump(config, f, indent=2, ensure_ascii=False)
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return False
            
    def is_running(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç"""
        if not os.path.exists(PID_FILE):
            return False
            
        try:
            with open(PID_FILE, 'r') as f:
                pid = int(f.read().strip())
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
            try:
                os.kill(pid, 0)
                return True
            except OSError:
                # –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º PID —Ñ–∞–π–ª
                os.remove(PID_FILE)
                return False
        except:
            return False
            
    def start_manager(self):
        """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞"""
        if self.is_running():
            print("–°–∫—Ä–∏–ø—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            return False
            
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤ —Ñ–æ–Ω–µ
            process = subprocess.Popen([
                sys.executable, 
                "bin/bingx_position_manager.py"
            ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
            with open(PID_FILE, 'w') as f:
                f.write(str(process.pid))
                
            print(f"–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω —Å PID: {process.pid}")
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
            return False
            
    def stop_manager(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞"""
        if not self.is_running():
            print("–°–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            return False
            
        try:
            with open(PID_FILE, 'r') as f:
                pid = int(f.read().strip())
                
            os.kill(pid, 15)  # SIGTERM
            time.sleep(2)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
            try:
                os.kill(pid, 0)
                # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º
                os.kill(pid, 9)  # SIGKILL
            except OSError:
                pass
                
            os.remove(PID_FILE)
            print("–°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
            return False
            
    def emergency_stop(self):
        """–ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"""
        config = self.load_config()
        if config:
            config['emergency_stop'] = True
            if self.save_config(config):
                print("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∞–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞")
                return True
        return False
        
    def resume(self):
        """–°–Ω—è—Ç–∏–µ –∞–≤–∞—Ä–∏–π–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"""
        config = self.load_config()
        if config:
            config['emergency_stop'] = False
            if self.save_config(config):
                print("–ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
                return True
        return False
        
    def status(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"""
        print("=== BingX Position Manager Status ===")
        
        # –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞
        if self.is_running():
            print("‚úÖ –°—Ç–∞—Ç—É—Å: –ó–∞–ø—É—â–µ–Ω")
        else:
            print("‚ùå –°—Ç–∞—Ç—É—Å: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        config = self.load_config()
        if config:
            print(f"üîß Testnet: {'–î–∞' if config.get('testnet', True) else '–ù–µ—Ç'}")
            print(f"‚è±Ô∏è  –ò–Ω—Ç–µ—Ä–≤–∞–ª: {config.get('check_interval', 60)} —Å–µ–∫")
            print(f"üìà –ü–æ—Ä–æ–≥ –ø—Ä–∏–±—ã–ª–∏: {config.get('profit_threshold', 0.01):.1%}")
            print(f"üõë –ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞: {'–î–∞' if config.get('emergency_stop', False) else '–ù–µ—Ç'}")
            print(f"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–î–∞' if config.get('dry_run', False) else '–ù–µ—Ç'}")
            
        # –õ–æ–≥–∏
        if os.path.exists(LOG_FILE):
            stat = os.stat(LOG_FILE)
            size = stat.st_size / 1024  # KB
            modified = datetime.fromtimestamp(stat.st_mtime)
            print(f"üìù –õ–æ–≥ —Ñ–∞–π–ª: {size:.1f} KB, –∏–∑–º–µ–Ω–µ–Ω {modified.strftime('%Y-%m-%d %H:%M:%S')}")
            
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
            try:
                with open(LOG_FILE, 'r', encoding='utf-8') as f:
                    lines = f.readlines()
                    if lines:
                        print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:")
                        for line in lines[-3:]:
                            print(f"   {line.strip()}")
            except:
                pass
        else:
            print("üìù –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    def show_help(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        print("""
BingX Position Manager Monitor

–ö–æ–º–∞–Ω–¥—ã:
  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–∑–∏—Ü–∏–π
  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–∑–∏—Ü–∏–π
  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–∑–∏—Ü–∏–π
  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
  emergency - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ä–∏–π–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É
  resume    - –°–Ω—è—Ç—å –∞–≤–∞—Ä–∏–π–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É
  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  python bin/bingx_monitor.py start
  python bin/bingx_monitor.py status
  python bin/bingx_monitor.py emergency
        """)

def main():
    monitor = BingXMonitor()
    
    if len(sys.argv) < 2:
        monitor.show_help()
        return
        
    command = sys.argv[1].lower()
    
    if command == "start":
        monitor.start_manager()
    elif command == "stop":
        monitor.stop_manager()
    elif command == "restart":
        monitor.stop_manager()
        time.sleep(1)
        monitor.start_manager()
    elif command == "status":
        monitor.status()
    elif command == "emergency":
        monitor.emergency_stop()
    elif command == "resume":
        monitor.resume()
    elif command == "help":
        monitor.show_help()
    else:
        print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        monitor.show_help()

if __name__ == "__main__":
    main()
